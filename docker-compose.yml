version: '3.7'

networks:
  frontend:
  backend:

services:

# -----------------------------------------------------------------
# Reverse Proxy

  traefik:
    image: traefik:v2.6
    container_name: "traefik"
    restart: unless-stopped

    networks:
      - frontend
      - backend

    ports:
      - 80:80
      - 443:443
      
    volumes:
      # Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro

      # Define Time
      - /etc/localtime:/etc/localtime:ro

       # Configuration      
      - ./devops/traefik/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./devops/traefik/traefik_dynamic.toml:/etc/traefik/traefik_dynamic.toml:ro

      # Data Storage 
      - ./data/traefik/acme.json:/acme.json


# -----------------------------------------------------------------
# WebServer

  nginx:
    image: nginx:1.21  
    restart: unless-stopped
    container_name: nginx
    
    depends_on:
      - django_gunicorn

    networks:
      - frontend
      - backend

    ports:
      - "8080:80"

    volumes:
      # Data Storage
      - ./devops/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./django_project/static:/static

      # Define Time
      - /etc/localtime:/etc/localtime:ro

    labels:
      traefik.enable: true

      traefik.http.routers.pi01-http.rule: Host(`bee.espertamente.com.br`)
      traefik.http.routers.pi01-http.entrypoints: web
      traefik.http.routers.pi01-http.middlewares: https-redirect@file

      traefik.http.routers.pi01-https.rule: "Host(`bee.espertamente.com.br`)"
      traefik.http.routers.pi01-https.entrypoints: "websecure"
      traefik.http.routers.pi01-https.middlewares: "security@file, compression@file"

      traefik.http.routers.pi01-https.tls: "true"
      traefik.http.routers.pi01-https.tls.certresolver: "letsencrypt"


# -----------------------------------------------------------------
# Django e Gunicorn

  django_gunicorn:
    restart: unless-stopped
    container_name: django_gunicorn
    build:
      context: .
      dockerfile: ./devops/django_gunicorn/Dockerfile
 
    networks:
      - frontend
      - backend

    ports:
      - "8001:8000"

    volumes:
      # Data Storage
      - ./django_project:/app

      # Define Time
      - /etc/localtime:/etc/localtime:ro

# -----------------------------------------------------------------
# Database

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    container_name: "mysql"

    networks:
      - frontend
      - backend

    ports:
      - "33061:3306"

    volumes:
      # Configuration
      # - ./devops/mysql/mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql

      # Data Storage
      - ./data/mysql:/var/lib/mysql

      # Define Time
      - /etc/localtime:/etc/localtime:ro

    command:
       - --default-authentication-plugin=mysql_native_password
       - --character-set-server=utf8
       - --collation-server=utf8_general_ci

    environment:
      # Database root user passord:
      MYSQL_ROOT_PASSWORD: 'XHdfSQM1RMuitoObrigado!!!koOqc2i2kTY'
      # App Schema Access:
      MYSQL_DATABASE: 'mysql'
      MYSQL_USER: 'mysql'
      MYSQL_PASSWORD: 'F6fmy9lMuitoObrigado!!!1SzRcD1Zqsxhs'

    labels:
      traefik.enable: false